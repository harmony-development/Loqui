name: Rust

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - '**/*.nix'
      - 'nix/envrc'
      - 'flake.lock'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'README.md'
      - '**/*.nix'
      - 'nix/envrc'
      - 'flake.lock'

env:
  CARGO_TERM_COLOR: always
  RUSTC_FORCE_INCREMENTAL: 1
  CARGO_INCREMENTAL: 1

jobs:
  tagref:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    
    - name: Install tagref
      run: curl -L https://github.com/stepchowfun/tagref/releases/download/v1.5.0/tagref-x86_64-unknown-linux-gnu > tagref && chmod +x tagref
      
    - name: Check tagref
      run: ./tagref && ./tagref list-unused

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    needs: tagref
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt update -yy
        sudo apt install -yy --no-install-recommends clang libgtk-3-0 libgtk-3-dev protobuf-compiler libpango1.0-0 libpango1.0-dev libglib2.0-0 libglib2.0-dev python3 pkg-config cmake openssl libx11-dev libxcb1-dev libfreetype6 libfreetype6-dev fontconfig libfontconfig-dev expat libcairo2-dev libcairo2 libatk1.0-0 libatk1.0-dev libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-dev clang lld unzip
        unzip .github/upx.zip && chmod +x upx
  
    - name: Install rust
      uses: actions-rs/toolchain@v1.0.7
      with:
        toolchain: stable
        default: true
        override: true
        components: rustfmt,clippy

    - name: Cache rust
      uses: Swatinem/rust-cache@v1

    - name: Clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: 'clippy (${{ matrix.os }})'

    - name: Build
      run: | 
          cargo build --release
          ./upx target/release/crust || echo "not on linux / macos"
          ./upx target/release/crust.exe || echo "not on windows"

    - name: Artifact macOS
      if: ${{ matrix.os == 'macOS-latest' }}
      uses: actions/upload-artifact@v2.2.4
      with:
        name: build-macos
        path: target/release/crust

    - name: Artifact Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v2.2.4
      with:
        name: build-linux
        path: target/release/crust

    - name: Artifact Windows
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v2.2.4
      with:
        name: build-windows
        path: target/release/crust.exe

  upload-release:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2

    - name: Display structure of downloaded files
      run: ls -R

    - name: Rename artifacts
      run: |
          mv build-windows/crust.exe build-windows/crust-windows.exe
          mv build-linux/crust build-linux/crust-linux
          mv build-macos/crust build-macos/crust-macos
          chmod +x build-{windows,linux,macos}/*

    - name: Upload release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
          chmod +x pyuploadtool-x86_64.AppImage
          ./pyuploadtool-x86_64.AppImage build-windows/crust-windows.exe build-linux/crust-linux build-macos/crust-macos